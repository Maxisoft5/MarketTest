{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SessionStorageService {\n  constructor() {\n    this.sessionStorage = sessionStorage;\n  }\n  setItemInJSON(key, value) {\n    this.sessionStorage.setItem(key, JSON.stringify(value));\n  }\n  getItemByKey(key) {\n    let json = this.sessionStorage.getItem(key);\n    if (json == null) {\n      console.warn(`${key} session key was not found`);\n    }\n    let item = JSON.parse(json);\n    return item;\n  }\n  removeItem(key) {\n    this.sessionStorage.removeItem(key);\n  }\n}\nSessionStorageService.ɵfac = function SessionStorageService_Factory(t) {\n  return new (t || SessionStorageService)();\n};\nSessionStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionStorageService,\n  factory: SessionStorageService.ɵfac\n});","map":{"version":3,"mappings":";AAIA,OAAM,MAAOA,qBAAqB;EAI9BC;IACI,IAAI,CAACC,cAAc,GAAGA,cAAc;EACxC;EAEAC,aAAa,CAACC,GAAW,EAAEC,KAAU;IACjC,IAAI,CAACH,cAAc,CAACI,OAAO,CAACF,GAAG,EAAEG,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;EAC3D;EAEAI,YAAY,CAACL,GAAU;IACnB,IAAIM,IAAI,GAAG,IAAI,CAACR,cAAc,CAACS,OAAO,CAACP,GAAG,CAAC;IAC3C,IAAIM,IAAI,IAAI,IAAI,EAAE;MACdE,OAAO,CAACC,IAAI,CAAC,GAAGT,GAAG,4BAA4B,CAAC;;IAEpD,IAAIU,IAAI,GAAGP,IAAI,CAACQ,KAAK,CAACL,IAAc,CAAC;IACrC,OAAOI,IAAI;EACf;EAEAE,UAAU,CAACZ,GAAW;IAClB,IAAI,CAACF,cAAc,CAACc,UAAU,CAACZ,GAAG,CAAC;EACvC;;AAvBSJ,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAiB,SAArBjB,qBAAqB;AAAA","names":["SessionStorageService","constructor","sessionStorage","setItemInJSON","key","value","setItem","JSON","stringify","getItemByKey","json","getItem","console","warn","item","parse","removeItem","factory"],"sourceRoot":"","sources":["C:\\Users\\Maksym\\Documents\\GitHub\\backend\\MarketTest\\Test\\ClientApp\\src\\app\\shared\\services\\session-storage-service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\n\r\n\r\n@Injectable()\r\nexport class SessionStorageService {\r\n\r\n    private sessionStorage!: Storage;\r\n\r\n    constructor() {\r\n        this.sessionStorage = sessionStorage;\r\n    }\r\n\r\n    setItemInJSON(key: string, value: any): void {\r\n        this.sessionStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    getItemByKey(key:string):any {\r\n        let json = this.sessionStorage.getItem(key);\r\n        if (json == null) {\r\n            console.warn(`${key} session key was not found`);\r\n        }\r\n        let item = JSON.parse(json as string);\r\n        return item;\r\n    }\r\n\r\n    removeItem(key: string):void {\r\n        this.sessionStorage.removeItem(key);\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
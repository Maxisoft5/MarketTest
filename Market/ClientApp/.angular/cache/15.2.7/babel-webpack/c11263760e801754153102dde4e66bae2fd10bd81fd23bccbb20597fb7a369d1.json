{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport class ProductsService {\n  get http() {\n    return this.injector.get(HttpClient);\n  }\n  constructor(injector) {\n    this.injector = injector;\n    this.bucketChanged = new EventEmitter();\n  }\n  getProducts() {\n    return this.http.get(`${this.apiUrl}/products/price-list`);\n  }\n  getFormattedProperty(prop) {\n    if (prop.key == \"format\") {\n      return `Формат: ${prop.value}`;\n    }\n    if (prop.key == \"color\") {\n      return `Цвет: ${prop.value}`;\n    }\n    return `${prop.key}: ${prop.value}`;\n  }\n  changeBucket() {\n    this.bucketChanged.emit();\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i0.Injector));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac\n});","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,YAAY,QAA8B,eAAe;;AAKlE,OAAM,MAAOC,eAAe;EAIxB,IAAIC,IAAI;IACJ,OAAO,IAAI,CAACC,QAAQ,CAACC,GAAG,CAACL,UAAU,CAAC;EACxC;EAEAM,YAAoBF,QAAkB;IAAlB,aAAQ,GAARA,QAAQ;IACxB,IAAI,CAACG,aAAa,GAAG,IAAIN,YAAY,EAAQ;EACjD;EAEAO,WAAW;IACP,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACI,MAAM,sBAAsB,CAAC;EACzE;EAEAC,oBAAoB,CAACC,IAAQ;IACzB,IAAIA,IAAI,CAACC,GAAG,IAAI,QAAQ,EAAE;MACxB,OAAO,WAAWD,IAAI,CAACE,KAAK,EAAE;;IAEhC,IAAIF,IAAI,CAACC,GAAG,IAAI,OAAO,EAAE;MACvB,OAAO,SAASD,IAAI,CAACE,KAAK,EAAE;;IAE9B,OAAO,GAAGF,IAAI,CAACC,GAAG,KAAKD,IAAI,CAACE,KAAK,EAAE;EACvC;EAGOC,YAAY;IACf,IAAI,CAACP,aAAa,CAACQ,IAAI,EAAE;EAC7B;;AA7BSb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAc,SAAfd,eAAe;AAAA","names":["HttpClient","EventEmitter","ProductsService","http","injector","get","constructor","bucketChanged","getProducts","apiUrl","getFormattedProperty","prop","key","value","changeBucket","emit","factory"],"sourceRoot":"","sources":["C:\\Users\\Maksym\\Documents\\GitHub\\backend\\MarketTest\\Test\\ClientApp\\src\\app\\shared\\services\\products-service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { EventEmitter, Injectable, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Product } from 'src/app/shared/models/product';\r\n\r\n@Injectable()\r\nexport class ProductsService {\r\n\r\n    public bucketChanged: EventEmitter<void>; \r\n\r\n    get http() {\r\n        return this.injector.get(HttpClient);\r\n    }\r\n\r\n    constructor(private injector: Injector) {\r\n        this.bucketChanged = new EventEmitter<void>();\r\n    }\r\n\r\n    getProducts(): Observable<Product[]> {\r\n        return this.http.get<Product[]>(`${this.apiUrl}/products/price-list`);\r\n    }\r\n\r\n    getFormattedProperty(prop:any) {\r\n        if (prop.key == \"format\") {\r\n          return `Формат: ${prop.value}`;\r\n        }\r\n        if (prop.key == \"color\") {\r\n          return `Цвет: ${prop.value}`;\r\n        } \r\n        return `${prop.key}: ${prop.value}`;\r\n    }\r\n    \r\n\r\n    public changeBucket():void {\r\n        this.bucketChanged.emit();\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}